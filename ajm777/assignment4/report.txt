Aliya Merali
Urban Informatics
Assignment 4
Report on Table Creation

Schema: 
For all tables, I decided that the common column to connect on would be the zip codes. So, each table's schema includes a column with the 5-digit zip code only. The other information linked to that zip code comprises the other columns, unique to each table as discussed below: 

1. Zip Code Table: For this table, I read the data in from the CSV file and drew out only the Name (which was the zip code), Area, and Population per Zip Code columns, as these were all that would be needed for the problems. To account for the variations in data, I took several measures. To ignore zip code values ending in HH (which only represent water features), I broke the zip code element into a list, and set an if condition that would prevent the insert command from being triggered if the 4th element in the zip code was an H. I also stopped the insert command from triggering if the population by zip was empty. THis is because the problems only will use this table if there is population and zip code information, so if one of these is missing, that element in the table will be useless anyway. So, I just ignore these values and eliminate them from the table alltogether. 

2. Borough Table: The borough table was very simple, because the data file is complete and formatted well. I simply read in each line of the .csv file, and inserted the zip code value and the borough name into the table. 

3. Incidents Table: The incident data file was very large and very messy. I put all three values into the table - so there are three columns with address, zip code, and number of incidents. I am assuming that the third column in this file (Unique Key) represents the number of incidents reported at that address / zip code combination. In order to sort through the inconsistent zip code entries, I went through and found all numbers in the zip code column and took the frist 5, so it would match all other zip code formats in the other two tables. Then, I prevented it from committing to the table if the zip code element was empty, since without that number, the data in the file will be useless. I also had to remove all " ' " characters from the address line for propper formatting in the insert command. This table insert command took quite a bit of time to fill because the code went through each line in the very large csv file. 
